package restaurant.controller;

import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.FileItemFactory;
import org.apache.commons.fileupload.FileUploadException;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;
import org.apache.commons.io.FilenameUtils;
import org.apache.ibatis.session.SqlSession;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import common.database.MyBatisSessionFactory;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import restaurant.vo.MenuVo;
import restaurant.vo.RestaurantVo;
import restaurant.vo.ReviewVo;
@Controller
public class RestaurantDetailController {
	@RequestMapping(value = "/selectRestaurant",produces = "application/json; charset=UTF-8")
	public @ResponseBody String getSelectRestaurant(HttpServletRequest request, HttpServletResponse response) throws IOException{
		
		request.setCharacterEncoding("UTF-8");


		SqlSession session = MyBatisSessionFactory.getSqlSession();
		// request �ޱ�

		int store_id = Integer.parseInt(request.getParameter("store_id"));
		
		System.out.println("store_id::"+store_id);
		HashMap map = new HashMap<String, Object>();
		map.put("store_id", store_id);
		List<RestaurantVo> list = session.selectList("SqlRestaurantDetail.selectRestaurant", map);
		session.close();
		

		
		  JSONArray jsonArray = JSONArray.fromObject(list);
		  
		  map = new HashMap<String, Object>();
		  map.put("store", jsonArray);
		  
		  JSONObject jsonObject = JSONObject.fromObject(map);
		  System.out.println("json - " + jsonObject.toString());
		return jsonObject.toString();
	}

	@RequestMapping(value = "/selectMenu",produces = "application/json; charset=UTF-8")
	public @ResponseBody String getSelectMenu(HttpServletRequest request, HttpServletResponse response) throws IOException{
		
		request.setCharacterEncoding("UTF-8");


		SqlSession session = MyBatisSessionFactory.getSqlSession();
		// request �ޱ�

		int store_id = Integer.parseInt(request.getParameter("store_id"));
		
		System.out.println("store_id::"+store_id);
		HashMap map = new HashMap<String, Object>();
		map.put("store_id", store_id);
		List<MenuVo> list = session.selectList("SqlRestaurantDetail.selectMenu", map);
		session.close();
		

		
		  JSONArray jsonArray = JSONArray.fromObject(list);
		  
		  map = new HashMap<String, Object>();
		  map.put("menu", jsonArray);
		  
		  JSONObject jsonObject = JSONObject.fromObject(map);
		  System.out.println("json - " + jsonObject.toString());
		return jsonObject.toString();
	}

	
	@RequestMapping(value = "/selectReview",produces = "application/json; charset=UTF-8")
	public @ResponseBody String getSelectReview(HttpServletRequest request, HttpServletResponse response) throws IOException{
		
		request.setCharacterEncoding("UTF-8");


		SqlSession session = MyBatisSessionFactory.getSqlSession();
		// request �ޱ�

		int store_id = Integer.parseInt(request.getParameter("store_id"));
		
		System.out.println("store_id::"+store_id);
		HashMap map = new HashMap<String, Object>();
		map.put("store_id", store_id);
		List<MenuVo> list = session.selectList("SqlRestaurantDetail.selectReview", map);
		session.close();
		

		
		  JSONArray jsonArray = JSONArray.fromObject(list);
		  
		  map = new HashMap<String, Object>();
		  map.put("review", jsonArray);
		  
		  JSONObject jsonObject = JSONObject.fromObject(map);
		  System.out.println("json - " + jsonObject.toString());
		return jsonObject.toString();
	}
	
	
	@RequestMapping(value = "/selectEvent",produces = "application/json; charset=UTF-8")
	public @ResponseBody String getSelectEvent(HttpServletRequest request, HttpServletResponse response) throws IOException{
		
		request.setCharacterEncoding("UTF-8");


		SqlSession session = MyBatisSessionFactory.getSqlSession();
		// request �ޱ�

		int store_id = Integer.parseInt(request.getParameter("store_id"));
		
		System.out.println("store_id::"+store_id);
		HashMap map = new HashMap<String, Object>();
		map.put("store_id", store_id);
		List<MenuVo> list = session.selectList("SqlRestaurantDetail.selectEvent", map);
		session.close();
		

		
		  JSONArray jsonArray = JSONArray.fromObject(list);
		  
		  map = new HashMap<String, Object>();
		  map.put("event", jsonArray);
		  
		  JSONObject jsonObject = JSONObject.fromObject(map);
		  System.out.println("json - " + jsonObject.toString());
		return jsonObject.toString();
	}
	
	
	@RequestMapping(value = "/selectUploadEx", produces = "application/json; charset=utf-8")


	public @ResponseBody String selectUploadEx(HttpServletRequest request, HttpServletResponse response) throws IOException{
		 boolean isMultipart = ServletFileUpload.isMultipartContent(request);
		 
		 String desc = null;
		SqlSession session = MyBatisSessionFactory.getSqlSession();
		ReviewVo reviewVo = new ReviewVo();
		 if (!isMultipart) {
		 }else {
		    FileItemFactory factory = new DiskFileItemFactory();
		    ServletFileUpload upload = new ServletFileUpload(factory);
		    upload.setHeaderEncoding("utf-8");
		    List items = null;
		    try {
		       items = upload.parseRequest(request);
		    } catch (FileUploadException e) {
		    System.out.println("���� 1: "+e);
		    }
		    Iterator itr = items.iterator();
		   
		    while (itr.hasNext()) {

		      FileItem item = (FileItem) itr.next();
		      if (item.isFormField()) { // ������ �ƴ� ���ʵ忡 �Է��� ������ ������.
		 
		    	    if(item!=null && item.getFieldName().equals("login")) {

		    	          String name = item.getString("UTF-8");//form field �ȿ� �Է��� �����͸� ������

		    	          System.out.println("������:"+name+"<br>"); 

		    	        }else if(item!=null && item.getFieldName().equals("password")) {

		    	           desc = new String(item.getString().getBytes("utf-8"),"utf-8");


		    	          System.out.println("���Ͽ� ���� ����:"+desc+"<br>");


		        }
		     } else { // �� �ʵ尡 �ƴϰ� ������ ���
		    try {

		       String itemName = item.getName();//���� �ý��� ���� ���ϰ�� �� ���� �̸� ����

		       if(itemName==null || itemName.equals("")) continue;

		       String fileName = FilenameUtils.getName(itemName);// ��ξ��� �����̸��� ������

		       // ���۵� ������ ������ �����ϱ� ���� ����

		       //String rootPath = getServletContext().getRealPath("/");
		       File savedFile = new File("C:/Users/house/Desktop/dev/restaurant-server/restaurant-server/WebContent/restaurant/"+fileName); 
		       item.write(savedFile);// ���� ��ο� ������ ������
		       System.out.println("�������� ���:"+savedFile);
		       
		   	try {
		   		reviewVo.setWrite_date("20000000");
		   		reviewVo.setReview_info(desc);
		   		reviewVo.setMember_id("1");
		   		
			
				session.insert("SqlRestaurantDetail.insertEvent", reviewVo);
		
				session.commit();
				session.close();
			

		       
		       

		    } catch (Exception e) {

		    	System.out.println("������ ���� ������ ����: "+e);
		      }
		   }
		  }
		 } 
		return "����";
	}
	
	
	
}
